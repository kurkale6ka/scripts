#! /usr/bin/env zsh

setopt extended_glob

# Don't update my cd bookmarks for automated cds
chpwd_functions=()

mkrepos() {

   mkdir -p ~/github

   if cd ~/github
   then
      git clone git@github.com:kurkale6ka/bash.git
      git clone git@github.com:kurkale6ka/config.git
      git clone git@github.com:kurkale6ka/help.git
      git clone git@github.com:kurkale6ka/zsh.git
      git clone git@github.com:kurkale6ka/scripts.git
      git clone git@github.com:kurkale6ka/vim.git
      if cd vim
      then
         git submodule init && git submodule update
      fi
      mktags
   fi
}

updaterepos() {

   for repo in ~/github/*(/)
   do
      if cd $repo
      then
         git fetch -q
         if [[ $(git symbolic-ref --short HEAD) == master ]] && git status -sb | grep -q behind
         then
            print -nP "%F{45}${repo:t}%f: "
            if git pull
            then
               git submodule sync >/dev/null && git submodule update
            fi
         fi
      fi
   done
}

mktags() {

   # Cheat by treating zsh files as sh
   # note: ~/github/zsh/autoload can't be added since the function names are 'missing'
   if cd ~/github
   then
      ctags -R                            \
         --langmap=vim:+.vimrc,sh:+.after \
         --exclude='*~ '                  \
         --exclude='.*~'                  \
         --exclude=bundle                 \
         --exclude=colors                 \
         --exclude=keymap                 \
         --exclude=pathogen.vim           \
         $XDG_CONFIG_HOME/zsh             \
         ~/github/scripts                 \
         ~/github/vim                     \
         ~/github/vim/bundle/vsearch      \
         ~/github/vim/.bundle/blanklines  \
         ~/github/vim/.bundle/blockinsert \
         ~/github/vim/.bundle/pairs       \
         ~/github/vim/.bundle/sequence    \
         ~/github/vim/.bundle/swap
   fi
}

bash=(.profile .bash_{profile,login,logout} .bashrc .logout)
configs=(.dir_colors .gitignore .{input,irb}rc .Xresources)
exes=(colors_term.bash colors_tmux.bash mkconfig)

mklinks() {

   # Create repo links in ~
   for repo in ~/github/*(/)
   do
      ln -s $repo ~
   done

   # Vim
   ${commands[gln]:-ln} -sT ~/github/vim ~/.vim
   ${commands[gln]:-ln} -sT ~/github/vim $XDG_CONFIG_HOME/nvim
   ln -s ~/github/vim/.{,g}vimrc ~

   # Zsh
   ln -s ~/github/zsh/autoload $XDG_CONFIG_HOME/zsh
   ln -s ~/github/zsh/.zprofile $XDG_CONFIG_HOME/zsh
   ln -s ~/github/zsh/.zshrc $XDG_CONFIG_HOME/zsh

   # Bash
   for c in $bash; ln -s ~/github/bash/$c ~

   mkdir -p $XDG_CONFIG_HOME/ranger

   # Misc configs
   ln -s ~/github/config/ctags/.ctags ~
   ln -s ~/github/config/tmux/.tmux.conf ~
   ln -s ~/github/config/ranger/rc.conf $XDG_CONFIG_HOME/ranger
   for c in $configs; ln -s ~/github/config/dotfiles/$c ~

   # ~/bin
   mkdir -p ~/bin
   if [[ -d ~/bin ]]
   then
      for c in $exes; ln -s ~/github/scripts/$c ~/bin

      ln -s ~/github/vim/scripts/vc ~/bin
      ln -s ~/github/config/tmux/lay ~/bin
   fi

} 2>/dev/null

rmlinks() {

   # Remove repo links in ~
   for l in ~/github/*(/:t)
   do
      'rm' ~/$l
   done

   # Vim
   'rm' ~/.vim $XDG_CONFIG_HOME/nvim
   'rm' ~/.{,g}vimrc

   # Zsh
   'rm' $XDG_CONFIG_HOME/zsh/autoload
   'rm' $XDG_CONFIG_HOME/zsh/.zprofile
   'rm' $XDG_CONFIG_HOME/zsh/.zshrc

   # Bash
   for c in $bash; 'rm' ~/$c

   # Misc configs
   'rm' ~/{.ctags,.tmux.conf}
   'rm' $XDG_CONFIG_HOME/ranger/rc.conf
   for c in $configs; 'rm' ~/$c

   # ~/bin
   for c in $exes; 'rm' ~/bin/$c
   'rm' ~/bin/vc
   'rm' ~/bin/lay
}

opts[1]='Update repositories'
opts[2]='Create repositories'
opts[3]='Generate tags'
opts[4]='Make links'
opts[5]='Remove links'

select choice in $opts
do
   case $choice in
      (${opts[1]}) updaterepos;      break;;
      (${opts[2]}) mkrepos; mklinks; break;;
      (${opts[3]}) mktags;           break;;
      (${opts[4]}) mklinks;          break;;
      (${opts[5]}) rmlinks;          break;;
               (*) echo '*** Wrong choice ***' >&2
   esac
done

# vim: foldmethod=indent
