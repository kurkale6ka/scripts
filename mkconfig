#! /usr/bin/env zsh

if [[ -z $REPOS_BASE ]]
then
   echo 'mkconfig: REPOS_BASE needs to be set' 1>&2
   return 1
fi

setopt extended_glob

# Don't update my cd bookmarks for automated cds
chpwd_functions=()

initial_setup() {

   mkdir -p $REPOS_BASE
   if cd $REPOS_BASE
   then
      echo '* Cloning repositories...'
      git clone git@github.com:kurkale6ka/zsh.git
      git clone git@github.com:kurkale6ka/bash.git
      git clone git@github.com:kurkale6ka/help.git
      git clone git@github.com:kurkale6ka/config.git
      git clone git@github.com:kurkale6ka/scripts.git
      git clone git@github.com:kurkale6ka/vim.git
   fi

   echo $'\n* Linking dot files...'
   mklinks

   echo '* Generating tags...'
   mktags

   # Fuzzy cd database
   if [[ -n $XDG_DATA_HOME ]]
   then
      echo $'\n* Creating fuzzy cd database...'
      mkdir -p $XDG_DATA_HOME/marks

      sqlite3 $XDG_DATA_HOME/marks/marks.sqlite <<- 'INIT'
		CREATE TABLE IF NOT EXISTS marks (
		  dir VARCHAR(200) UNIQUE,
		  weight INTEGER
		);

		CREATE INDEX IF NOT EXISTS _dir ON marks (dir);
		INIT
   else
      echo 'fuzzy cd database: XDG setup needed' 1>&2
      return 2
   fi
}

updaterepos() {
   for repo in $REPOS_BASE/*(/)
   do
      if cd $repo
      then
         git fetch -q
         if [[ $(git symbolic-ref --short HEAD) == master ]] && git status -sb | grep -q behind
         then
            print -nP "%F{45}${repo:t}%f: "
            git pull
         fi
      fi
   done
}

mktags() {
   if [[ -z $XDG_CONFIG_HOME ]]
   then
      echo 'mktags (zsh): XDG setup needed' 1>&2
      return 3
   fi

   # Cheat by treating zsh files as sh
   # note: $REPOS_BASE/zsh/autoload can't be added since the function names are 'missing'
   if cd $REPOS_BASE
   then
      ctags -R                                   \
         --langmap=vim:+.vimrc,sh:+.after        \
         --exclude='*~ '                         \
         --exclude='.*~'                         \
         --exclude=plugged                       \
         --exclude=colors                        \
         --exclude=keymap                        \
         --exclude=plug.vim                      \
         $XDG_CONFIG_HOME/zsh                    \
         $REPOS_BASE/scripts                     \
         $REPOS_BASE/vim                         \
         $REPOS_BASE/vim/plugged/vsearch         \
         $REPOS_BASE/vim/plugged/vim-blockinsert \
         $REPOS_BASE/vim/plugged/vim-chess       \
         $REPOS_BASE/vim/plugged/vim-desertEX    \
         $REPOS_BASE/vim/plugged/vim-pairs       \
         $REPOS_BASE/vim/plugged/vim-swap
   fi
}

bash=(.bash_{profile,logout} .bashrc)
configs=(.gitignore .irbrc .pyrc .Xresources)
exes=(colors_term.bash colors_tmux.bash mkconfig)

mklinks() {
   # Vim
   ${commands[gln]:-ln} -sT $REPOS_BASE/vim ~/.vim
   ln -s $REPOS_BASE/vim/.{,g}vimrc ~

   if [[ -n $XDG_CONFIG_HOME ]]
   then
      # nvim
      ${commands[gln]:-ln} -sT $REPOS_BASE/vim $XDG_CONFIG_HOME/nvim

      # zsh
      if mkdir -p {$XDG_CONFIG_HOME,$XDG_DATA_HOME}/zsh
      then
         ln -s $REPOS_BASE/zsh/.zshenv ~
         ln -s $REPOS_BASE/zsh/autoload $XDG_CONFIG_HOME/zsh
         ln -s $REPOS_BASE/zsh/.zprofile $XDG_CONFIG_HOME/zsh
         ln -s $REPOS_BASE/zsh/.zshrc $XDG_CONFIG_HOME/zsh
      fi

      # ranger
      if mkdir -p $XDG_CONFIG_HOME/ranger
      then
         ln -s $REPOS_BASE/config/ranger/rc.conf $XDG_CONFIG_HOME/ranger
      fi
   else
      echo 'mklinks (nvim, zsh, ranger): XDG setup needed' 1>&2
   fi

   # Bash
   for c in $bash; ln -s $REPOS_BASE/bash/$c ~

   # Misc configs
   ln -s $REPOS_BASE/config/ctags/.ctags ~
   ln -s $REPOS_BASE/config/tmux/.tmux.conf ~

   for c in $configs; ln -s $REPOS_BASE/config/dotfiles/$c ~

   # ~/bin
   if mkdir -p ~/bin
   then
      for c in $exes; ln -s $REPOS_BASE/scripts/$c ~/bin

      ln -s $REPOS_BASE/vim/extra/vc ~/bin
      ln -s $REPOS_BASE/config/tmux/lay ~/bin
   fi

} 2>/dev/null

rmlinks() {
   # Vim
   'rm' ~/.vim
   'rm' ~/.{,g}vimrc

   if [[ -n $XDG_CONFIG_HOME ]]
   then
      # nvim
      'rm' $XDG_CONFIG_HOME/nvim

      # zsh
      'rm' ~/.zshenv
      'rm' $XDG_CONFIG_HOME/zsh/autoload
      'rm' $XDG_CONFIG_HOME/zsh/.zprofile
      'rm' $XDG_CONFIG_HOME/zsh/.zshrc

      # ranger
      'rm' $XDG_CONFIG_HOME/ranger/rc.conf
   fi

   # Bash
   for c in $bash; 'rm' ~/$c

   # Misc configs
   'rm' ~/{.ctags,.tmux.conf}
   for c in $configs; 'rm' ~/$c

   # ~/bin
   for c in $exes; 'rm' ~/bin/$c
   'rm' ~/bin/vc
   'rm' ~/bin/lay
}

opts[1]='Update repositories'
opts[2]='Initial setup'
opts[3]='Generate tags'
opts[4]='Make links'
opts[5]='Remove links'

select choice in $opts
do
   case $choice in
      (${opts[1]}) updaterepos;   break;;
      (${opts[2]}) initial_setup; break;;
      (${opts[3]}) mktags;        break;;
      (${opts[4]}) mklinks;       break;;
      (${opts[5]}) rmlinks;       break;;
               (*) echo '*** Wrong choice ***' >&2
   esac
done

# vim: foldmethod=indent
