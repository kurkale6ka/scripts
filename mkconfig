#! /usr/bin/env zsh

setopt extended_glob

mkrepos() {

   mkdir -p ~/github

   if cd ~/github
   then
      for repo in bash config help scripts vim zsh
      do
         if [[ ! -d $repo ]]
         then
            if git clone git@github.com:kurkale6ka/$repo.git
            then
               if [[ $repo == (bash|vim) ]]
               then
                  (
                  if cd $repo
                  then
                     git submodule init && git submodule update
                  fi
                  )
               fi
               # No newline for the last one
               [[ ! $repo == zsh ]] && echo
            fi
         fi
      done
      mktags
   fi
}

updaterepos() {

   for repo in ~/github/^bash-cd(/)
   do
      if cd $repo
      then
         if git pull git@github.com:kurkale6ka/$repo:t.git master
         then
            if [[ $repo:t == (bash|vim) ]]
            then
               git submodule sync >/dev/null && git submodule update
            fi
            # No newline for the last one
            [[ ! $repo:t == zsh ]] && echo
         fi
      fi
   done
}

mktags() {

   local base=~/github

   cd $base &&
   ctags -R                                \
   --langmap=vim:+.vimrc,zsh:+.zshrc_after \
   --exclude='*~ '                         \
   --exclude='.*~'                         \
   --exclude=bundle                        \
   --exclude=colors                        \
   --exclude=keymap                        \
   --exclude=pathogen.vim                  \
   ~/.zshrc_after                          \
   $base/zsh/.zsh/autoload                 \
   $base/bash/scripts                      \
   $base/scripts                           \
   $base/vim                               \
   $base/vim/bundle/vsearch                \
   $base/vim/.bundle/blanklines            \
   $base/vim/.bundle/blockinsert           \
   $base/vim/.bundle/pairs                 \
   $base/vim/.bundle/sequence              \
   $base/vim/.bundle/swap
}

bash=(.profile .bash_{profile,login,logout} .bashrc .logout)
configs=(.dir_colors .gitignore .{input,irb}rc .Xresources)
exes=(colors_term.bash colors_tmux.bash mkconfig)

mklinks() {

   local base=~/github

   # Create repo links in ~
   for repo in $base/^bash-cd(/)
   do
      ln -s $repo ~
   done

   # Vim
   ${commands[gln]:-ln} -sT $base/vim ~/.vim
   ${commands[gln]:-ln} -sT $base/vim ~/.nvim
   ln -s $base/vim/.{,g,n}vimrc ~

   # Zsh
   ln -s $base/zsh/.zsh ~
   ln -s $base/zsh/.zprofile ~
   ln -s $base/zsh/.zshrc ~

   # Bash
   for c in $bash; ln -s $base/bash/$c ~
   ln -s $base/bash/scripts/cd/.cdmarks.skel ~

   # Misc configs
   ln -s $base/config/ctags/.ctags ~
   ln -s $base/config/tmux/.tmux.conf ~
   for c in $configs; ln -s $base/config/dotfiles/$c ~

   # ~/bin
   mkdir -p ~/bin
   if [[ -d ~/bin ]]
   then
      for c in $exes; ln -s $base/scripts/$c ~/bin

      ln -s $base/vim/scripts/vc ~/bin
      ln -s $base/config/tmux/lay ~/bin
   fi

} 2>/dev/null

rmlinks() {

   # Remove repo links in ~
   for l in ~/github/^bash-cd(/:t)
   do
      'rm' ~/$l
   done

   # Vim
   'rm' ~/{.vim,.nvim}
   'rm' ~/.{,g,n}vimrc

   # Zsh
   'rm' ~/.zsh
   'rm' ~/.zprofile
   'rm' ~/.zshrc

   # Bash
   for c in $bash; 'rm' ~/$c
   'rm' ~/.cdmarks.skel

   # Misc configs
   'rm' ~/{.ctags,.tmux.conf}
   for c in $configs; 'rm' ~/$c

   # ~/bin
   for c in $exes; 'rm' ~/bin/$c
   'rm' ~/bin/vc
   'rm' ~/bin/lay
}

opts[1]='Update repositories'
opts[2]='Create repositories'
opts[4]='Generate tags'
opts[5]='Make links'
opts[6]='Remove links'

select choice in $opts
do
   case $choice in
      (${opts[1]}) updaterepos;      break;;
      (${opts[2]}) mkrepos; mklinks; break;;
      (${opts[4]}) mktags;           break;;
      (${opts[5]}) mklinks;          break;;
      (${opts[6]}) rmlinks;          break;;
               (*) echo '*** Wrong choice ***' >&2
   esac
done

# vim: foldmethod=indent
