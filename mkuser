#! /usr/bin/env bash

# User(s) creation + installation of public key(s)
# Run on the target machine
#
# Usage:
#    mkuser
#    mkuser /file/with/keys
#           ssh-rsa AAAxxx user@domain
#           ...

shopt -s extglob

## Help
if [[ $1 == -@(h|-h)* ]]
then
read -r -d $'\0' info << 'HELP'
Usage:
   mkuser
   mkuser /file/with/keys
          ssh-rsa AAAxxx user@domain
          ...
HELP
   if (($#))
   then echo "$info"    ; exit 0
   else echo "$info" >&2; exit 1
   fi
fi

# Colors
b="$(tput bold)"
y="$(printf %s "$b"; tput setaf 3)"
r="$(tput sgr0)"

# Usage: _mkauth sshkey
_mkauth () {

   ## Key check: type key email
   if (($(awk '{print NF}' <<< $1) != 3))
   then
      echo 'Wrong ssh key format. Please use: type key email!' 1>&2
      exit 2
   fi

   ## Parse the ssh key
   local key="$(awk '{print $2}' <<< "$1")"
   local email="$(awk '{print $3}' <<< "$1")"
   local login="${email%@*}"

   # Set the user's home directory
   if [[ $login == root ]]
   then local home=/root
   else local home=/home/"$login"
   fi

   read -p "The user's home directory is: $y${home}$r. Change the value or Enter to accept: "

   [[ $REPLY ]] && home="$REPLY"

   ## Create user
   if ! getent passwd "$login" >/dev/null
   then
      IFS= read -p 'Name: (First Last) ' full_name
      useradd -m -s/bin/bash -c"$full_name" "$login"
   elif [[ ! -d $home ]]
   then
      if mkdir -p "$home"
      then
         chown "$login":"$login" "$home"
      fi
   fi

   ## Install key
   if mkdir -p "$home"/.ssh
   then
      if ! grep "$key" "$home"/.ssh/authorized_keys 2>/dev/null
      then
         echo "$sshkey" >> "$home"/.ssh/authorized_keys
      fi

      # Change permissions + ownership
      chmod 700 "$home"/.ssh
      chmod 600 "$home"/.ssh/authorized_keys

      chown -R "$login":"$login" "$home"/.ssh
   fi
}

## Main
# several users
if (($#))
then
   # Without -u3, _mkauth's read would also read from the file vs STDIN
   while IFS= read -r -u3 sshkey
   do
      [[ $sshkey = \#* ]] && continue
      _mkauth "$sshkey"
   done 3< "$1"
# a single user
else
   IFS= read -p 'Public key: ' sshkey
   _mkauth "$sshkey"
fi

# vim: fde=getline(v\:lnum)=~'^\\s*##'?'>'.(len(matchstr(getline(v\:lnum),'###*'))-1)\:'='
